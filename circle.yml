# This circle.yml is heavily inspired from the guide at
# https://circleci.com/docs/continuous-deployment-with-google-container-engine/
machine:
  environment:
    GCLOUD_PROJECT: kbh-billeder
    GCLOUD_CLUSTER: kbh-billeder-staging-cluster
    GCLOUD_COMPUTE_ZONE: europe-west1-b
    GOOGLE_APPLICATION_CREDENTIALS: ${HOME}/gcloud-service-key.json
    GCLOUD: sudo /opt/google-cloud-sdk/bin/gcloud
  services:
    - docker
dependencies:
  override:
    # Upgrading the gcloud command and installing kubectl
    - $GCLOUD --quiet components update
    - $GCLOUD --quiet components update kubectl
    # Decode the gcloud service account key and authenticate gcloud
    - echo $GCLOUD_SERVICE_KEY | base64 --decode > ${HOME}/gcloud-service-key.json
    - $GCLOUD auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
    # Setup gcloud configuration
    - $GCLOUD config set project $GCLOUD_PROJECT
    - $GCLOUD config set compute/zone $GCLOUD_COMPUTE_ZONE
    # Get the credentials for the cluster
    - $GCLOUD container clusters get-credentials $GCLOUD_CLUSTER
    # Write specific environment variables to an .env file
    - |
      cat << EOF > .env
      NODE_ENV=production
      CIP_USERNAME="${CIP_USERNAME}"
      CIP_PASSWORD="${CIP_PASSWORD}"
      KEYSTONE_ADMIN_EMAIL="${KEYSTONE_ADMIN_EMAIL}"
      KEYSTONE_ADMIN_PASSWORD="${KEYSTONE_ADMIN_PASSWORD}"
      COOKIE_SECRET="${COOKIE_SECRET}"
      CLOUDINARY_URL="${CLOUDINARY_URL}"
      EOF
    # Build the docker image using the current directory as context
    - sudo docker build -t eu.gcr.io/${GCLOUD_PROJECT}/frontend:$CIRCLE_SHA1 .
    # Using a separate tag command until Docker 1.10 is available on CircleCI, then we can use two tags in the build command above
    - sudo docker tag eu.gcr.io/${GCLOUD_PROJECT}/frontend:$CIRCLE_SHA1 eu.gcr.io/${GCLOUD_PROJECT}/frontend:latest
    # Optionally install a specific version the collections online
    - |
      if [ -z "$collections_online_sha1" ]; then
        CO=git://github.com/collections-online/collections-online.git#$collections_online_sha1
        echo "Installing the specific CO version using $CO"
        sudo docker run --cidfile /tmp/docker_test.cid eu.gcr.io/${GCLOUD_PROJECT}/frontend:latest npm install $CO
        CID=$(cat /tmp/docker_test.cid)
        sudo docker commit $CID collections-online-testable
      fi
test:
  override:
    - |
      if [ -z "$collections_online_sha1" ]; then
        echo "Testing the Collections Online specific version"
        sudo docker run collections-online-testable npm test
      else
        sudo docker run eu.gcr.io/${GCLOUD_PROJECT}/frontend:latest npm test
      fi
deployment:
  staging:
    branch: master
    commands:
      - |
        if [ -z "$collections_online_sha1" ]; then
          echo "Skipping deployment - it was build with a specifc collections online version"
        else
          . ./deployment/staging.sh
        fi
